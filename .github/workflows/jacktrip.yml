name: build
on:
  push:
    branches:
      - main
      - dev
    tags:
      - '**'
    paths-ignore:
      - 'README**'
  pull_request:
    paths-ignore:
      - 'README**'
jobs:
  preflight:
    name: Check if secrets exist to upload artifacts
    runs-on: ubuntu-latest
    outputs:
      has_secrets: ${{ steps.setvar.outputs.has_secrets }}
      upload_artifact: ${{ steps.setvar.outputs.upload_artifact }}
      promote_artifact: ${{ steps.setvar.outputs.promote_artifact }}
      branch: ${{ steps.setvar.outputs.branch }}
      commit: ${{ steps.setvar.outputs.commit }}
    steps:
      - id: setvar
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            COMMIT=${GITHUB_REF#refs/tags/}
          else
            COMMIT=${GITHUB_SHA::7}
          fi
          if [[ -n "${{ secrets.GCP_IDP }}" && -n "${{ secrets.GCS_SVC_ACCT }}" ]]; then
            echo "Secrets to upload artifacts were configured in the repo"
            echo "has_secrets=true" >> $GITHUB_OUTPUT
            if [[ "$BRANCH" == "main" ]]; then
              echo "upload_artifact=true" >> $GITHUB_OUTPUT
              echo "promote_artifact=true" >> $GITHUB_OUTPUT
            elif [[ "$BRANCH" == "develop" ]]; then
              echo "upload_artifact=true" >> $GITHUB_OUTPUT
              echo "promote_artifact=false" >> $GITHUB_OUTPUT
            else
              echo "upload_artifact=false" >> $GITHUB_OUTPUT
              echo "promote_artifact=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Secrets to upload artifacts were not configured in the repo"
            echo "has_secrets=false" >> $GITHUB_OUTPUT
            echo "upload_artifact=false" >> $GITHUB_OUTPUT
            echo "promote_artifact=false" >> $GITHUB_OUTPUT
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT
  build:
    needs: preflight
    runs-on: ${{ matrix.runs-on }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false # don't abort if one of the build failse
      matrix:
        include:
        - name: qt-5.15.13-static-win
          runs-on: windows-2019
          qt-version: '5.15.13'
          qt-type: 'static'
    permissions:
      contents: "read"
      id-token: "write"
    env:
      GCP_IDP: ${{ secrets.GCP_IDP }}
      GCS_SVC_ACCT: ${{ secrets.GCS_SVC_ACCT }}
      GCS_UPLOAD_DIR: 'gs://files.jacktrip.org/contrib/qt'
    steps:
      - name: Authenticate to GCS
        uses: google-github-actions/auth@v1
        if: needs.preflight.outputs.upload_artifact == 'true'
        with:
          workload_identity_provider: ${{ env.GCP_IDP }}
          service_account: ${{ env.GCS_SVC_ACCT }}
          create_credentials_file: true
      - name: Setup SDK for GCS
        if: needs.preflight.outputs.upload_artifact == 'true' && runner.os != 'Windows'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'
      - name: Setup SDK for GCS (Windows)
        if: needs.preflight.outputs.upload_artifact == 'true' && runner.os == 'Windows'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          skip_install: true
      - name: Upload build artifact to GCS
        if: needs.preflight.outputs.upload_artifact == 'true'
        shell: bash
        run: |
          # this feature seems to produce permission denied errors on osx and linux runners
          gcloud version
          gcloud config set storage/parallel_composite_upload_enabled False
          BINFILE="${{ steps.create-binary.outputs.filename }}"
          echo "Uploading $BINFILE to $GCS_UPLOAD_DIR"
          gcloud storage cp "$BINFILE" "$GCS_UPLOAD_DIR"
          if [[ "${{ needs.preflight.outputs.promote_artifact }}" == "true" ]]; then
            PROMOFILE="${{ matrix.name }}.${{ steps.create-binary.outputs.ext }}"
            echo "Promoting $BINFILE to $PROMOFILE"
            gcloud storage cp "$GCS_UPLOAD_DIR/$BINFILE" "$GCS_UPLOAD_DIR/$PROMOFILE"
          fi
